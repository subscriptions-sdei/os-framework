<?php
    /*
        * Showrooms Controller class
        * Functionality -  Manage the Showrooms Management
        * Developer - Gurpreet Singh Ahhluwalia
        * Created date - 12-Feb-2014
        * Modified date - 
    */
    class ShowroomsController extends AppController {        
        var $name = 'Showrooms';                
		
		public $components = array('Paginator','Common','Image');
		var $helpers = array('Common');
		
		
		public $paginate = array(
        'limit' => 10,
        'order' => array(
            'Showroom.id' => 'DESC'
				)
			);
        function beforeFilter(){
            parent::beforeFilter();    
            
        }
		
		/*
            * listing function
            * Functionality -  Display the show listing on frontend
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 26-Feb-2014
            * Modified date - 
        */
		
		function listing($getShowroomName = null)
		{
			$this->getDressSizes();
			$this->getShoeSizes();
			$this->getBrandList();
			$this->getCategoryList();
			$shroomName = '';						
			if(!empty($getShowroomName)) {
				$showroomName = $this->Common->stringConvertUscoreToSpace($getShowroomName);
				$conditions = 'Showroom.status = "1" AND Showroom.showroom LIKE "%'.$showroomName.'%"';
				$getData = $this->Showroom->find('first',array('fields' => array('Showroom.id','Showroom.showroom'),'conditions' => array($conditions)));
				if(!empty($getData))
				{
					$showroomName = $getData['Showroom']['showroom'];
				}
			}						
			
            /* Price Array */
			$getPriceArray = $this->getPriceArray();
			$this->set('getPriceArray',$getPriceArray);
			/* Price Array */
            
            
			$this->set('categoryName',$showroomName);
			$this->set('categorySearchShow','1');
			$this->set('brandSearchShow','1');
			
			
			$this->render('/Categories/listing');
		}
		
		
		/*
            * admin_index function
            * Functionality -  Showrooms Listing
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 12-Feb-2014
            * Modified date - 
        */
        function admin_index()
        {            
            /* Active/Inactive/Delete functionality */
			if((isset($this->data["Showroom"]["setStatus"])))
			{
				if(!empty($this->request->data['Showroom']['status'])){
					$status = $this->request->data['Showroom']['status'];
				}else
				{
					$this->Session->setFlash("Please select the action.",'default',array('class'=>'alert alert-danger'));	
					$this->redirect(array('action' => 'index'));
					
				}
				$CheckedList = $this->request->data['checkboxes'];
				$model='Showroom';				
				$controller = $this->params['controller'];				
				$action = $this->params['action'];				
				$this->setStatus($status,$CheckedList,$model,$controller,$action); 			 
			}
			/* Active/Inactive/Delete functionality */
			
			$value ="";
			$criteria='1 = 1'; 
			if(!empty($this->request->data['Search'])){
				if(isset($this->request->data['Search']['keyword']) && !empty($this->request->data['Search']['keyword'])){		   
					$value = $this->request->data['Search']['keyword'];				  
				}	
				if($value !="") {
						$criteria .= " AND Showroom.showroom LIKE '%".$value."%'";						
				}
				/* Active & Inactive Search functionality */
				if(isset($this->data['Search']['show'])){
					$show = $this->data['Search']['show'];					
				}				
				if(isset($show) && $show =='0'){			
					$criteria .= " AND Showroom.status = '0'";			
				}else if(isset($show) && $show =='1'){
					$criteria .= " AND Showroom.status = '1'";
				}
				/* Active & Inactive Search functionality */		
				$this->Paginator->settings = array('conditions' => array($criteria));
			}
			else{
			    $this->Paginator->settings = $this->paginate;    
			}			
			$this->set('getData',$this->Paginator->paginate('Showroom'));
			$this->set('keyword', $value);
			$this->set('navshowrooms','class = "active"');			
			$this->set('breadcrumb','Showrooms');			
        }
		
        /*
            * admin_addedit function
            * Functionality -  Add & edit the Showrooms
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 12-Feb-2014
            * Modified date - 
        */
        function admin_addedit($id = null)
        {
			$this->getShowroomCategory();
			if(empty($this->request->data)){
				$this->request->data = $this->Showroom->read(null, base64_decode($id));			
			}else
			if(isset($this->request->data) && !empty($this->request->data))
			{  
				
				if(!empty($this->request->data['Showroom']['image']['name']))
				{
					 
					$ext=substr($this->data['Showroom']['image']['type'],strpos($this->data['Showroom']['image']['type'],"/")+1);					
					if($ext == "jpeg" || $ext == "gif" || $ext == "png" || $ext == "bmp")
					{	
						//$this->Image->set_paths(WWW_ROOT . 'img/showrooms/', WWW_ROOT . 'img/showrooms/thumb/'); 
						//if($image = $this->Image->upload_image('Showroom.image'))
						//{					
						//	$getImageName = $this->getUploadedImageName($image); 
						//	$this->request->data['Showroom']['image'] =  $getImageName;
						//	$this->Image->thumb($image); // Create the thumb
						//}
						$file = $this->request->data['Showroom']['image'];
							$path = 'img/showrooms';					
							$folder_name = 'original';
							$imageName = $this->request->data['Showroom']['image']['name'];
							$multiple[] = array('folder_name'=>'thumb','height'=>'355','width'=>'300'); 
							$response = $this->Common->upload_image($file, $path, $folder_name, true, $multiple);
							$filename = $response;                    
							$originalImage = WWW_ROOT . 'img/showrooms/original/'.$filename;   
							if(file_exists($originalImage))
							{
									unlink($originalImage);                              
							}
							$this->request->data['Showroom']['image'] = $filename;
					}else{
						$this->Session->setFlash("Please upload the image JPEG,GIF,BMP,PNG format.",'default',array('class'=>'alert alert-success'));	
						$this->redirect(array('action' => 'addedit'));
					}
				}else
				{	
					$this->request->data['Showroom']['image'] =  $this->request->data['Showroom']['old_image'];
				}
				
				$this->Showroom->set($this->request->data);	
				if($this->Showroom->validates()) 				
				{ 
					$this->request->data['Showroom']['id'] = base64_decode($this->request->data['Showroom']['id']);					
					$this->request->data['Showroom']['showroom'] = trim($this->request->data['Showroom']['showroom']);					
					if($this->Showroom->save($this->request->data))
					{ 	
						$this->Session->setFlash("Showroom has been saved sucessfully.",'default',array('class'=>'alert alert-success'));	
						$this->redirect(array('action' => 'index'));
					}
				}    
			}
			$textAction = ($id == null) ? 'Add' : 'Update';			
			$this->set('navshowrooms','class = "active"');			
			$this->set('action',$textAction);			
			$this->set('breadcrumb','Showrooms/'.$textAction);
			
        }
		/*
            * admin_delete function
            * Functionality -  Add & edit the Showrooms
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 12-Feb-2014
            * Modified date - 
        */       
		function admin_delete($id = null)
		{
			if(!empty($id)){
				$this->Showroom->id = base64_decode($id);
				$this->Showroom->delete();
				$this->Session->setFlash("Showroom has been deleted sucessfully.",'default',array('class'=>'alert alert-success'));	
				$this->redirect('index');
			}			
		}
		
        /* To get image Name */
		function getUploadedImageName($imagePath)
		{		
			$imageArray = explode('/',$imagePath); // to get uploaded image name
			return end($imageArray); // uploaded image name
						
		}
		
		
		function deleteOldImages($imageName =  null)
		{
			unlink();
		}
		
		function index(){
			$this->loadModel('ShowroomCategory');
			$this->ShowroomCategory->bindModel(array('hasMany'=>array('Showroom')));
			$this->ShowroomCategory->Behaviors->load('Containable');
			$data = $this->ShowroomCategory->find('all',array('fields'=>array('id','name'),'contain'=>array('Showroom'=>array('fields'=>array('id','showroom','image'),'order'=>'showroom DESC'))));
			$this->set('data',$data);
		}
		function admin_add_category(){
			$this->layout = null;
			$this->loadModel('ShowroomCategory');
			if(isset($this->data) && !empty($this->data)){
				$check = $this->ShowroomCategory->find('count',array('conditions'=>array('name'=>$this->data['ShowroomCategory']['name'])));
				if($check == 0){
				$this->ShowroomCategory->save($this->data);
				$this->Session->setFlash('Showroom Category saved sucessfully', "success");
				echo '<script type="text/javascript">parent.location.reload();</script>';
				}else{
					$this->Session->setFlash('Name already exists', 'default', array('class'=>'alert alert-danger'));
				}
			}
			
		}
		function all_showrooms($category_id){
			$category_id = base64_decode($category_id);
			$this->loadModel('ShowroomCategory');
			$this->ShowroomCategory->bindModel(array('hasMany'=>array('Showroom')));
			$this->ShowroomCategory->Behaviors->load('Containable');
			$data = $this->ShowroomCategory->find('first',array('conditions'=>array('ShowroomCategory.id'=>$category_id),'fields'=>array('id','name'),'contain'=>array('Showroom'=>array('fields'=>array('id','showroom','image'),'order'=>'showroom DESC'))));
			$this->set('data',$data);
		}
		
    
    }

?>