<?php
    /*
        * Items Controller class
        * Functionality -  To manage items 
        * Developer - Navdeep Kaur
        * Created date - 17-Feb-2014
        * Modified date - 
    */
    class ItemsController extends AppController {        
        var $name = 'Items';                
		public $components = array('Paginator','Image','Common');
        public $uses = "Item";
		public $paginate = array(
        'limit' => 10,
        'order' => array(
            'Items.id' => 'DESC'
				)
			);
        function beforeFilter(){
            parent::beforeFilter();    
            
        }     
		/*
            * admin_index function
            * Functionality -  Items Listing
            * Developer - Navdeep Kaur
            * Created date - 17-Feb-2014
            * Modified date - 
        */
        function admin_index()
        {
			/* Active/Inactive/Delete functionality */
			if((isset($this->data["Item"]["setStatus"])))
			{
				if(!empty($this->request->data['Item']['status'])){
					$status = $this->request->data['Item']['status'];
				}else
				{
					$this->Session->setFlash("Please select the action.",'default',array('class'=>'alert alert-danger'));	
					$this->redirect(array('action' => 'index'));
					
				}
				$CheckedList = $this->request->data['checkboxes'];
				$model='Item';				
				$controller = $this->params['controller'];				
				$action = $this->params['action'];				
				$this->setStatus($status,$CheckedList,$model,$controller,$action); 			 
			}
			/* Active/Inactive/Delete functionality */
            $value ="";
			$criteria='1 = 1'; 
			if(!empty($this->request->data['Search'])){
				if(isset($this->request->data['Search']['keyword']) && !empty($this->request->data['Search']['keyword'])){		   
					$value = $this->request->data['Search']['keyword'];				  
				}	
				if($value !="") {
						$criteria .= " AND Item.name LIKE '%".$value."%'";						
				}
				$this->Paginator->settings = array('conditions' => array($criteria));
			}
			else{
			    $this->Paginator->settings = $this->paginate;    
			}
			$getData =  $this->Paginator->paginate('Item');			
			$this->set('getData',$getData);
			$this->set('keyword', $value);
			$this->set('navitems','class = "active"');			
			$this->set('breadcrumb','Items');			
        }
		
        /*
            * admin_addedit function
            * Functionality -  Add & edit the Showrooms
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 12-Feb-2014
            * Modified date - 
        */
        function admin_add($id = null)
        {
			$this->loadModel('ItemImage');
            $this->getBrandList();
            $this->getCategoryList();
            $this->getDressSizes();
            $this->getShoeSizes();
			$picLimit = 4;
			$this->set('picLimit',$picLimit);
			$this->Item->bindModel(array('hasMany'=>array('ItemImage')));
			if(isset($this->request->data) && !empty($this->request->data))
			{ //pr($this->request->data); die;
				$this->Item->set($this->request->data);	
				if($this->Item->validates()) 				
				{ 
					if($id){
                        $this->request->data['Item']['id'] = base64_decode($this->request->data['Item']['id']);
                        $msz= "Item updated sucessfully.";
                    }else{
                        $msz= "Item saved sucessfully.";
                    }
					$this->request->data['Item']['name'] = trim($this->request->data['Item']['name']);					
					if($this->Item->save($this->request->data))
					{
						$itemId = $this->Item->id;
						/*****************image upload*****************/
						if(!empty($this->request->data['ItemImage']['image_name'])){
								$a=0; 
							foreach($this->request->data['ItemImage']['image_name'] as $imagesAdd){
								if(isset($imagesAdd['name']) && $imagesAdd['name'] != ""){
								// Variable declaration
								$file = $imagesAdd;
								$path = 'img/items';					
								$folder_name = 'original';
								$multiple[] = array('folder_name'=>'thumb','height'=>'355','width'=>'300'); 
								$multiple[] = array('folder_name'=>'thumb_small','height'=>'120','width'=>'120'); 
								// Code to upload the image
								$response = $this->Common->upload_image($file, $path, $folder_name, true, $multiple);
								
								// check if filename return or error return
								$is_image_error = $this->Common->is_image_error($response);
								
								if($response == 'exist_error'){
									$this->Session->setFlash($is_image_error,'error');
								}elseif($response == 'size_mb_error'){
									$this->Session->setFlash($is_image_error,'error');
								}elseif($response == 'type_error'){
									$this->Session->setFlash($is_image_error,'error');
								}else{
									
									$old_pic = $this->request->data['ItemImage']['old_logo'];
									if(!empty($old_pic)){
										$this->Common->delete_image($old_pic, $path, $folder_name, true, $multiple);
									}
								
									$flag = true;
									$filename = $response;
									$data['ItemImage']['image'] = $filename;
									$data['ItemImage']['item_id'] = $itemId;
									if($a == 0){
										$data['ItemImage']['set_as_cover'] =1;
									}else{
										$data['ItemImage']['set_as_cover'] = 0;
									}
									$this->ItemImage->create();
									$this->ItemImage->save($data['ItemImage']);
								}
								} $a++;
							}
						}
						$this->Session->setFlash($msz,'default',array('class'=>'alert alert-success'));	
						$this->redirect(array('action' => 'index'));
					}
				}    
			}else{
                
                $this->request->data = $this->Item->read(null, base64_decode($id));
            }
			$textAction = ($id == null) ? 'Add' : 'Update';			
			$this->set('navitems','class = "active"');			
			$this->set('action',$textAction);			
			$this->set('breadcrumb','Items/'.$textAction);
			
        }
		/*
            * admin_delete function
            * Functionality -  Add & edit the Showrooms
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 12-Feb-2014
            * Modified date - 
        */       
		function admin_delete($id = null)
		{
			$this->Item->id = base64_decode($id);
			$this->Item->delete();
			$this->Session->setFlash("Item has been deleted sucessfully.",'default',array('class'=>'alert alert-success'));	
			$this->redirect('index');
		}
		
        /* To get image Name */
		function getUploadedImageName($imagePath)
		{		
			$imageArray = explode('/',$imagePath); // to get uploaded image name
			return end($imageArray); // uploaded image name
						
		}
		
		
		function delete_pic($imageId =  null)
		{
			$this->loadModel('ItemImage');
			$data = $this->ItemImage->find('first',array('conditions'=>array('ItemImage.id'=>$imageId)));
			if(!empty($data)){
				$imageName = 'items/thumb/'.$data['ItemImage']['image'];                
				if(file_exists(WWW_ROOT.'/img/'.$imageName) && !empty($val['image']))
				{
					unlink(WWW_ROOT.'/img/'.$imageName);
				    unlink(WWW_ROOT.'/img/items/original/'.$imageName);
				}
				$this->ItemImage->id = $imageId;
				$this->ItemImage->delete();
				echo "1"; exit;
			}
		}
		function admin_setImages($itemId =  null){
			$this->loadModel('ItemImage');
			$this->set('navitems','class = "active"');			
			$this->set('breadcrumb','Items');
			$this->set('itemId',$itemId);
			$data = $this->ItemImage->find('all',array('conditions'=>array('ItemImage.item_id'=>base64_decode($itemId))));
		
			$this->set('data',$data);
			if(!empty($this->request->data)){
				
				$this->ItemImage->updateAll(
										array('ItemImage.set_as_cover' => "0"), 
										array('ItemImage.item_id' => base64_decode($itemId))
									);
				$this->ItemImage->id = $this->request->data['ItemImage']['set_as_cover']; 
				$this->ItemImage->saveField('set_as_cover', 1);
				$this->Session->setFlash("Image Choosen successfully.",'default',array('class'=>'alert alert-success'));	
				$this->redirect('index');
			}
		}
		/*
            * admin_delete function
            * Functionality -  Add & edit the Showrooms
            * Developer - Gurpreet Singh Ahhluwalia
            * Created date - 12-Feb-2014
            * Modified date - 
        */       
		function upload_item($id = null)
		{
			$this->layout = "login";			
            $this->getBrandList();
            $this->getCategoryList();
            $this->getDressSizes();
            $this->getShoeSizes();
			$loggedUserId = $this->Session->read('UserInfo.id');
			$this->loadModel('ItemImage');
			$picLimit = 4;
			$this->set('picLimit',$picLimit);
			$this->Item->bindModel(array('hasMany'=>array('ItemImage')));
			if(isset($this->request->data) && !empty($this->request->data))
			{ //pr($this->request->data); die;
				$this->Item->set($this->request->data);	
				if($this->Item->validates()) 				
				{ 
					if($id){
                        $this->request->data['Item']['id'] = base64_decode($this->request->data['Item']['id']);
                        $msz= "Item updated sucessfully.";
                    }else{
                        $msz= "Item saved sucessfully.";
                    }
					$this->request->data['Item']['name'] = trim($this->request->data['Item']['name']);
					$this->request->data['Item']['added_by'] = 1;
					$this->request->data['Item']['user_id'] = $loggedUserId;
					$this->request->data['Item']['unique_id'] = md5(uniqid(rand(), true));
					if($this->Item->save($this->request->data))
					{
						$itemId = $this->Item->id;
						/*****************image upload*****************/
						if(!empty($this->request->data['ItemImage']['image_name'])){
								$a=0; 
							foreach($this->request->data['ItemImage']['image_name'] as $imagesAdd){
								if(isset($imagesAdd['name']) && $imagesAdd['name'] != ""){
								// Variable declaration
								$file = $imagesAdd;
								$path = 'img/items';					
								$folder_name = 'original';
								$multiple[] = array('folder_name'=>'thumb','height'=>'355','width'=>'300'); 
								$multiple[] = array('folder_name'=>'thumb_small','height'=>'120','width'=>'120'); 
								// Code to upload the image
								$response = $this->Common->upload_image($file, $path, $folder_name, true, $multiple);
								
								// check if filename return or error return
								$is_image_error = $this->Common->is_image_error($response);
								
								if($response == 'exist_error'){
									$this->Session->setFlash($is_image_error,'error');
								}elseif($response == 'size_mb_error'){
									$this->Session->setFlash($is_image_error,'error');
								}elseif($response == 'type_error'){
									$this->Session->setFlash($is_image_error,'error');
								}else{
									
									$old_pic = $this->request->data['ItemImage']['old_logo'];
									if(!empty($old_pic)){
										$this->Common->delete_image($old_pic, $path, $folder_name, true, $multiple);
									}
								
									$flag = true;
									$filename = $response;
									$data['ItemImage']['image'] = $filename;
									$data['ItemImage']['item_id'] = $itemId;
									if($a == 0){
										$data['ItemImage']['set_as_cover'] =1;
									}else{
										$data['ItemImage']['set_as_cover'] = 0;
									}
									$this->ItemImage->create();
									$this->ItemImage->save($data['ItemImage']);
								}
								} $a++;
							}
						}
						$this->Session->setFlash($msz,'default',array('class'=>'alert alert-success'));	
						$this->redirect(array('action' => 'my_items'));
					}
				}    
			}else{
                
                $this->request->data = $this->Item->read(null, base64_decode($id));
            }
			
		}
		function my_items(){
			$sessionUserId = $this->Session->read('UserInfo.id');
            $this->set('sessionUserId',$sessionUserId);
            $this->Item->bindModel(
                                        array('hasOne' => array(
                                                'ItemImage' => array(
                                                    'className' => 'ItemImage',
                                                    'conditions' => array('ItemImage.set_as_cover'=> 1)
                                                )
                                            )
                                        )
                                    );
            
            $itemData  = $this->Item->find('all',array('conditions'=>array('Item.user_id'=>$sessionUserId),'recursive'=>2,'order'=>'Item.id DESC'));
            $this->set('itemData',$itemData); 
		}
		
    
    }

?>